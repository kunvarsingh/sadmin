{"version":3,"sources":["serviceWorker.js","utils/constant.js","utils/history.js","utils/components.js","containers/header/Constants.js","containers/header/index.js","containers/header/Actions.js","containers/sidebar/Constants.js","containers/sidebar/index.js","containers/sidebar/Actions.js","containers/signup/Constants.js","containers/signup/index.js","containers/signup/Actions.js","utils/DraggableModal.js","containers/services/Actions.js","containers/services/index.js","containers/shops/Actions.js","containers/shops/index.js","containers/users/Actions.js","containers/users/index.js","routes.js","containers/login/index.js","containers/login/Actions.js","utils/alertComponent.js","containers/dashbaord/index.js","app.js","containers/tableContainer/Constants.js","containers/tableContainer/Reducer.js","containers/login/Reducer.js","containers/services/Reducer.js","containers/shops/Reducer.js","containers/users/Reducer.js","redux/combineReducer.js","redux/store.js","index.js","containers/services/Constants.js","containers/shops/Constants.js","containers/users/Constants.js","containers/login/Constants.js"],"names":["__webpack_require__","d","__webpack_exports__","unregister","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","API_URL","createBrowserHistory","renderTextField","createMuiTheme","overrides","MuiFormControl","root","width","MuiPickersToolbar","toolbar","backgroundColor","MuiPickersCalendarHeader","switchHeader","MuiPickersDay","day","color","isSelected","current","MuiPickersModal","dialogAction","MuiInput","underline","&&&&:hover:before","borderBottom","&&&&:after","MuiFormLabel","focused","&$focused","_ref","input","label","id","multiLine","rowsMax","disabled","fullWidth","hintText","defaultValue","onChange","maxLength","_ref$meta","loader","meta","touched","error","customError","autoFocus","floatingLabelFixed","custom","Object","objectWithoutProperties","react_default","a","createElement","TextField_default","assign","floatingLabelText","errorText","className","autoComplete","event","floatingLabelStyle","top","floatingLabelFocusStyle","style","height","inputStyle","marginTop","renderToggleButton","_ref9","name","defaultToggled","toggled","_ref9$meta","thumbStyle","trackStyle","thumbSwitchedStyle","trackSwitchedStyle","Toggle_default","onToggle","value","labelPosition","CommonButton","_ref10","title","onTouchTap","onClick","type","primary","icon","RaisedButton_default","LOGIN","LOGIN_SECCESS","LOGIN_ERROR","Header","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","dropdownOpen","dropdownToggle","bind","assertThisInitialized","onSubmit","e","setState","formData","props","login","_this2","handleSubmit","Navbar","expand","Container","fluid","ref","sidebarToggle","openSidebar","NavbarBrand","href","NavbarToggler","toggle","Collapse","navbar","InputGroup","Input","placeholder","InputGroupAddon","addonType","InputGroupText","Nav","NavItem","react_router_dom","to","Dropdown","nav","DropdownToggle","caret","DropdownMenu","right","DropdownItem","tag","Component","reduxForm","form","validate","values","errors","userName","connect","data","dispatch","getLogin","fetch","method","body","JSON","stringify","res","json","toast","warning","message","success","catch","getLoginError","Sidebar","activeRoute","routeName","pathname","indexOf","data-color","bgColor","data-active-color","activeColor","src","alt","sidebar","routes","map","prop","key","path","pro","layout","activeClassName","SINGUP","SINGUP_SECCESS","SINGUP_ERROR","Signup","signup","Field","component","mail","getsignup","getsignupError","DraggableModal","handleOnRequestClose","payerServiceCodeId","Alert","position","effect","timeout","customFields","displayComponent","handleButtonClick","handleAlertClick","handleClose","closeAll","that","document","onkeydown","evt","keyCode","heightCheck","screen","availHeight","minHeight","Math","floor","availWidth","dist","onRequestClose","initHeight","minWidth","initWidth","headerValue","actions","footerText","iscloseButton","overlay","getallservice","ADDAllSERVICE","getAllserviceSuccess","ADDAllSERVICE_SECCESS","getAllserviceError","ADDAllSERVICE_ERROR","getServices","headers","Content-Type","statusCode","Services","handleDeleteClick","index","handleActiveAlertClick","user","isActive","deleteService","_id","handleEditClick","getServiceById","open","serviceId","renderTableList","serviceList","length","ServiceName","amount","totalTime","aria-hidden","colSpan","loading","onDateChange","moment","format","defineProperty","addService","isAdd","Date","tableClass","classNames","table","table-striped","table-bordered","table-hover","table-condensed","customtable","recivefax_tbl","components_CommonButton","DraggableModal_DraggableModal","getElementById","offsetHeight","noValidate","initialValueData","serviceReducer","serviceDataByID","console","log","serviceData","serviceDataByList","initialValues","ADDSERVICE","getservice","ADDSERVICE_SECCESS","reset","ADDSERVICE_ERROR","getserviceError","GETBYIDSERVICE","getByIdservice","GETBYIDSERVICE_SECCESS","GETBYIDSERVICE_ERROR","getByIdserviceError","deleteshop","DELETESHOP","styles","thumbOff","trackOff","thumbSwitched","left","trackSwitched","Shop","handleDeleteAlertClick","deleteShop","getShopList","salonStatus","updateShopData","onActiveToggle","shopList","SalonName","ContactNo","CityName","StateName","Zipcode","Address","shopReducer","shopData","SHOP","getallshop","SHOP_SECCESS","SHOP_ERROR","getAllshopError","DELETESHOP_SECCESS","DELETESHOP_ERROR","deleteshopError","UPDATESHOP","updateShop","UPDATESHOP_SECCESS","UPDATESHOP_ERROR","updateShopError","getUsers","ADDAllUSER","ADDAllUSER_SECCESS","ADDAllUSER_ERROR","getAlluserError","Users","deleteUserById","usersList","UserName","FirstName","LastName","MobileNo","shops","mobileVerificationStatus","userReducer","users","DELETEUSER","deleteUser","DELETEUSER_SECCESS","DELETEUSER_ERROR","deleteUserError","Login","history","push","username","localStorage","setItem","token","AlertContentTemplate","zIndex","customButtons","button","handleClick","param","toUpperCase","customerName","userID","close","React","Dashboard","containers_header","containers_sidebar","react_router","muiTheme","getMuiTheme","palette","primary1Color","accent1Color","slider","selectionColor","handleFillColor","App","isloggedIn","MuiThemeProvider_default","react_toastify","autoClose","exact","render","dashbaord","react_s_alert_default","contentTemplate","stack","limit","GET_TABLE_DATA","GET_TABLE_DATA_SUCCESS","GET_TABLE_DATA_ERROR","UPDATE_USER_STATUS","UPDATE_USER_STATUS_SUCCESS","UPDATE_USER_STATUS_ERROR","initialState","tableReducer","arguments","undefined","action","tableData","updateStatusResponse","loginReducer","rootReducer","combineReducers","forms","store","createStore","applyMiddleware","thunkMiddleware","r","module","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","react_redux__WEBPACK_IMPORTED_MODULE_3__","_redux_store__WEBPACK_IMPORTED_MODULE_4__","_serviceWorker__WEBPACK_IMPORTED_MODULE_5__","material_ui_styles_getMuiTheme__WEBPACK_IMPORTED_MODULE_7__","material_ui_styles_getMuiTheme__WEBPACK_IMPORTED_MODULE_7___default","_app__WEBPACK_IMPORTED_MODULE_11__","ReactDOM","hot","accept","DELETESERVICE","DELETESERVICE_SECCESS","DELETESERVICE_ERROR"],"mappings":"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","file":"static/js/main.fc23359d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const API_URL = 'https://sallon.herokuapp.com/';\n\nexport const jsonApiHeader = (accessToken, ContentType, businessNameCheck) => {\n\n  return {\n    'businessToken': businessNameCheck ? businessNameCheck : null,\n    'Content-Type': ContentType ? ContentType : 'application/vnd.api+json',\n    'Authorization': accessToken ? `Bearer ${accessToken}` : '',\n    // 'Timezone': calculateLocalTimeZone(),\n    // 'IPAddress': GlobalVariables.IpAddress,\n    // 'LocationID': GlobalVariables.CurrentLocationId ? GlobalVariables.CurrentLocationId : 0,\n  };\n};\n","\nimport { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React from 'react';\n// import TextField from '@material-ui/core/TextField';\nimport SelectField from 'material-ui/SelectField'\n\n\n\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton';\nimport Checkbox from 'material-ui/Checkbox';\n\n// import DatePicker from 'material-ui/DatePicker';\nimport FlatButton from 'material-ui/FlatButton/FlatButton';\nimport MaterialSelectField from 'material-ui-selectfield';\nimport TextField from 'material-ui/TextField';\nimport Toggle from 'material-ui/Toggle';\nimport AutoComplete from 'material-ui/AutoComplete';\nimport { DatePicker, InlineTimePicker } from \"material-ui-pickers\";\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport MomentUtils from '@date-io/moment';\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUp from '@material-ui/icons/ArrowDropUp';\nimport Select, { components } from 'react-select';\nimport Radio from '@material-ui/core/Radio';\nimport CreatableSelect from 'react-select';\n// import { showWarningMessage } from '../actions/utilAction';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nconst materialTheme = createMuiTheme({\n  overrides: {\n    MuiFormControl: {\n      root: {\n        width: '100%'\n      }\n    },\n    MuiPickersToolbar: {\n      toolbar: {\n        backgroundColor: '#00BAC3',\n      },\n    },\n    MuiPickersCalendarHeader: {\n      switchHeader: {\n        // backgroundColor: lightBlue.A200,\n        // color: \"white\",\n      },\n    },\n    MuiPickersDay: {\n      day: {\n        color: '#00BAC3',\n      },\n      isSelected: {\n        backgroundColor: '#00BAC3',\n      },\n      current: {\n        color: '#00BAC3',\n      },\n    },\n    MuiPickersModal: {\n      dialogAction: {\n        color: '#00BAC3',\n      },\n    },\n    MuiInput: {\n      underline: {\n        \"&&&&:hover:before\": {\n          borderBottom: \"1px solid rgba(0, 0, 0, 0.42)\"\n        },\n        \"&&&&:after\": {\n          borderBottom: \"2px solid #66D6DB\"\n        },\n        // borderBottom: \"1px solid #66D6DB\"\n      }\n    },\n    MuiFormLabel: {\n      focused: {\n        \"&$focused\": {\n          color: \"#66D6DB\"\n        }\n      }\n    }\n  },\n});\n\n\n\nexport const renderTextField = ({\n  input,\n  label,\n  id,\n  multiLine,\n  rowsMax,\n  fullWidth,\n  disabled,\n  hintText,\n  defaultValue,\n  onChange,\n  maxLength,\n  loader,\n  meta: { touched, error },\n  customError,\n  autoFocus,\n  floatingLabelFixed,\n  ...custom\n}) => {\n  return (\n    <TextField\n      id={id}\n      defaultValue={defaultValue}\n      autoFocus={autoFocus}\n      floatingLabelText={label}\n      floatingLabelFixed={floatingLabelFixed}\n      errorText={touched && (error || customError)}\n      multiLine={multiLine}\n      hintText={hintText}\n      rowsMax={rowsMax}\n      disabled={disabled}\n      fullWidth={true}\n      className=\"valuefont\"\n      autoComplete='new-type'\n      onChange={(event) => onChange}\n      maxLength={maxLength}\n      floatingLabelStyle={{ top: '30px', color: '#7a7a7a' }}\n      floatingLabelFocusStyle={{ color: '#01B9C1' }}\n      style={{ height: '62px ' }}\n      inputStyle={{ marginTop: '10px' }}\n      {...input}\n      {...custom}\n    />\n\n  );\n};\n\n\n// Single Select No Async.\nexport const renderAutoCompleteSingleSelect = ({\n  input,\n  label,\n  value,\n  meta: { touched, error },\n  handleUpdateInput,\n  handleNewRequest,\n  options,\n  hintText,\n  disabled,\n  require,\n  floatingLabelFixed,\n  isCreatable,\n  openOnFocus, customError,\n  isScheduler,\n  ...custom\n}) => {\n\n  let sourceArr = [];\n  if (options && options.length) {\n    options.map((obj) => {\n      sourceArr[obj.id] = obj.value;\n      return sourceArr;\n    });\n  }\n\n  // let optionsList = [];\n  if (options && options.length) {\n\n    if (label === 'Default Location' || label === 'Location' || label === 'Office Location') {\n      options.map(({ id, locationName }) => (\n        <div key={id} value={id} label={locationName}>\n          {locationName}\n        </div>\n      ));\n\n    } else {\n      options && options.length && options.map(({ id, value }) => (\n        <div key={id} value={id} label={value}>\n          {value}\n        </div>\n      ));\n    }\n  }\n  let selectedObj = null;\n  if (typeof input === 'object') {\n\n    if (options && options.length) {\n      if (label === 'Discipline' && options.length === 1) {\n        selectedObj = { 'value': '', 'label': '' };\n        selectedObj['value'] = options[0].id;\n        selectedObj['label'] = options[0].value;\n        if (options[0].key) selectedObj['key'] = options[0].key;\n      }\n      else if (label === 'Payer Name' && options.length === 1) {\n        selectedObj = { 'value': '', 'label': '' };\n        selectedObj['value'] = options[0].id;\n        selectedObj['label'] = options[0].value;\n        if (options[0].key) selectedObj['key'] = options[0].key;\n        handleNewRequest(input, selectedObj);\n      }\n      else {\n        options.map((i) => {\n          if (i.id === input.value) {\n            selectedObj = { 'value': '', 'label': '' };\n            selectedObj['value'] = i.id;\n            // selectedObj['label'] = label === 'Default Location' ? i.locationName.slice(0) : i.value;\n            selectedObj['label'] = label === 'Default Location' || label === 'Office Location' ? i.locationName : i.value;\n            if (i.key) selectedObj['key'] = i.key;\n          }\n          else if (isNaN(input.value) && isCreatable) {\n            selectedObj = { 'value': '', 'label': '' };\n            selectedObj['value'] = 0;\n            selectedObj['label'] = input.value;\n            if (input.key) selectedObj['key'] = input.key;\n          }\n          return selectedObj;\n        });\n      }\n    }\n  }\n\n\n  const changeSelectedObj = (selectedValue) => {\n    if (selectedValue === null) { //  Remove selection\n      selectedObj = { 'value': null, 'label': '', key: '' };\n      handleNewRequest(input, selectedObj);\n    }\n    else if (isCreatable && selectedValue.__isNew__) {\n      selectedObj = { 'value': selectedValue.label, 'label': selectedValue.label, 'isNew': selectedValue.__isNew__, 'key': selectedValue.key };\n      handleNewRequest(input, selectedObj);\n    }\n    else { // Apply Selection\n      selectedObj = { 'value': selectedValue.id, 'label': selectedValue.label, 'key': selectedValue.key };\n      handleNewRequest(input, selectedObj);\n    }\n  };\n\n\n  // handleChange = (newValue, actionMeta) => {\n  //   console.group('Value Changed');\n  //   console.log(newValue);\n  //   console.log(`action: ${actionMeta.action}`);\n  //   console.groupEnd();\n  // };\n  const handleInputChange = (inputValue, actionMeta) => {\n    // console.group('Input Changed');\n    // console.log(inputValue);\n    // console.log(`action: ${actionMeta.action}`);\n    // console.groupEnd();\n  }\n\n  let optionsListItem = [];\n  if (options && options.length) {\n    options && options.forEach(function (data) {\n      let obj = {};\n      obj = { ...data };\n      obj.label = data.value;\n      if (data.key) {\n        // console.log('i found key',data.key)\n        obj.key = data.key;\n      }\n      optionsListItem.push(obj);\n    });\n  }\n  return (\n    <div style={{ marginTop: isScheduler ? '0px' : '-34px' }}>\n      <span style={{\n        color: 'rgba(0, 0, 0, 0.54)',\n        'paddingLeft': 10,\n        'fontSize': '0.8rem',\n        'fontFamily': '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      }}>\n        {input.value && input.value.length ? label : ''}\n        {(input.value && input.value.length && require) ? (<span style={{ color: '#ff0000' }}> *</span>) : ''}\n      </span>\n      {!isCreatable ? <div><Select\n        isClearable\n        // components={{ DropdownIndicator }}\n        // styles={customStyles}\n        value={selectedObj}\n        onChange={(value) => changeSelectedObj(value) && input.onChange(value)}\n        onBlur={(value) => !selectedObj && input.onBlur(value)}\n        options={optionsListItem}\n        isSearchable={true}\n        placeholder={<span style={{ color: '#ff0000' }}><span style={{ color: 'grey' }}>{label}</span> {require ? ' *' : ''}</span>}\n        // isMulti\n        // defaultValue={[selectedObj]}\n        isDisabled={disabled ? disabled : false}\n        theme={(theme) => ({\n          ...theme,\n          borderRadius: 0,\n          error: error,\n          touched: touched,\n          colors: {\n            ...theme.colors,\n            // primary25: 'hotpink',\n            primary: '#2FB9C1',\n            borderBottom: '#ff0000'\n          },\n        })}\n      />\n        <div>{(touched && error) &&\n          <div style={{ position: 'relative', fontSize: 12, color: 'rgb(244, 67, 54)', transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms' }}>\n            {error}</div>}</div>\n      </div>\n        :\n        <div>\n          <CreatableSelect\n            isClearable\n            onChange={(value) => changeSelectedObj(value) && input.onChange(value)}\n            onBlur={(value) => !selectedObj && input.onBlur(value)}\n            // onInputChange={handleInputChange}\n            // components={{ DropdownIndicator }}\n            // styles={customStyles}\n            value={selectedObj}\n            options={optionsListItem}\n            isSearchable={true}\n            placeholder={<span style={{ color: '#ff0000' }}><span style={{ color: 'grey' }}>{label}</span> {require ? ' *' : ''}</span>}\n            // isMulti\n            // defaultValue={[selectedObj]}\n            // isDisabled={isLoading}\n            // isLoading={isLoading}\n            isDisabled={disabled ? disabled : false}\n            theme={(theme) => ({\n              ...theme,\n              error: error,\n              touched: touched,\n              borderRadius: 0,\n              colors: {\n                ...theme.colors,\n                // primary25: 'hotpink',\n                primary: '#2FB9C1',\n              },\n            })}\n          />\n          <div>{(touched && error) &&\n            <div style={{ position: 'relative', fontSize: 12, color: 'rgb(244, 67, 54)', transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms' }}>\n              {error}</div>}</div>\n        </div>\n      }\n    </div>\n  );\n};\n// render MultiSelection Fields for multiple items ...\nexport const renderAutoCompleteMultipleSelection = ({\n  input,\n  label,\n  meta: { touched, error },\n  handleUpdateInput,\n  handleNewRequest,\n  options,\n  require,\n  className,\n  disabled,\n  customError,\n  isCreatable,\n  ...custom\n}) => {\n\n  // let optionsList = [];\n  let defaultSelected = [];\n  let newValue = null;\n\n  if (options && options.length) {\n    if (label === 'Location') {\n      options.map(({ id, locationName }) => {\n        if (input.value.length) {\n          input.value.map((selected) => {\n            if (selected === id) {\n              defaultSelected.push({\n                label: locationName,\n                value: id,\n              });\n            }\n            return defaultSelected;\n          });\n        }\n        return (\n          <div key={id} value={id} label={locationName}>\n          {locationName}\n        </div>\n        );\n      });\n    } else {\n      options.map(({ id, value }) => {\n        if (input.value.length) {\n          input.value.map((selected) => {\n            if (selected === id) {\n              defaultSelected.push({\n                label: value,\n                value: id,\n              });\n            }\n            else if (isNaN(selected) && isCreatable && !newValue) {\n              defaultSelected.push({\n                label: selected,\n                value: 0,\n              });\n              newValue = { 'value': 0, 'label': selected };\n            }\n            return defaultSelected;\n          });\n        }\n        return (\n          <div key={id} value={id} label={value}>\n            {value}\n          </div>\n        );\n      });\n    }\n  }\n}\n\nexport const renderTimePicker = ({ input, name, dialogBodyStyle, dialogStyle, hintText, onDismiss, onShow, onDateChange, format, selected, fullWidth, disabled, placeholder, meta: { touched, error, warning } }) => {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <MuiThemeProvider theme={materialTheme}>\n        <InlineTimePicker\n          keyboard\n          label={placeholder}\n          value={selected !== null ? new Date(selected) : {}}\n          onChange={(value) => onDateChange(input, value)}\n          mask={[/\\d/, /\\d/, \":\", /\\d/, /\\d/, \" \", /a|p/i, \"M\"]}\n          disabled={disabled}\n          autoOk={true}\n        />\n      </MuiThemeProvider>\n    </MuiPickersUtilsProvider>\n  );\n};\n\nexport const renderToggleButton = ({\n  input,\n  name,\n  label,\n  fullWidth,\n  defaultToggled,\n  className,\n  toggled,\n  meta: { touched, error },\n  onChange,\n  thumbStyle,\n  trackStyle,\n  thumbSwitchedStyle,\n  trackSwitchedStyle,\n}) => {\n  return (\n    <Toggle\n      name={name}\n      label={label}\n      className={className}\n      thumbStyle={thumbStyle}\n      trackStyle={trackStyle}\n      thumbSwitchedStyle={thumbSwitchedStyle}\n      trackSwitchedStyle={trackSwitchedStyle}\n      defaultToggled={defaultToggled}\n      toggled={toggled}\n      onToggle={(value) => input.onChange(value)}\n      labelPosition=\"right\"\n    />\n  );\n};\n\n\nexport const CommonButton = ({ name, title, label, onTouchTap, onClick, disabled, type, primary, fullWidth, className, icon }) => {\n  return (\n    <RaisedButton\n      name = {name}\n      title = {title}\n      primary= {primary}\n      fullWidth = {fullWidth}\n      type = {type}\n      className= {className}\n      label={label}\n      onClick={onClick}\n      onTouchTap={onTouchTap}\n      disabled= {disabled}>\n      {icon}\n    </RaisedButton>\n  );\n};","export const LOGIN = 'LOGIN';\nexport const LOGIN_SECCESS = 'GET_TABLE_DATA_SUCCESS';\nexport const LOGIN_ERROR = 'GET_TABLE_DATA_ERROR';\n","import './header.css';\nimport {connect} from 'react-redux'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport React,{Component} from 'react';\n// import Alert from 'react-s-alert';\nimport {Field, reduxForm, reset, change} from 'redux-form';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { login } from './Actions';\nimport {renderTextField,renderAutoCompleteMultipleSelection} from '../../utils/components'\n// import {validate} from './validate';\nimport { ToastContainer, toast } from 'react-toastify';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Input\n} from \"reactstrap\";\n\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.userName) {\n    errors.userName = 'Please input User Name';\n  }\n  return errors;\n};\n\n\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = ({\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    });\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillMount(){\n    let masterData = {masterData: 'masterLocation'};\n    // this.props.getMasterData(masterData);\n  }\n\n   dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  onSubmit(formData){\n      // toast.success('You have successfully login!.'+JSON.stringify(formData));\n      this.props.login(formData)\n      // alert(JSON.stringify(formData));\n  }\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n     // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color=\"dark\"\n        expand=\"lg\"\n        className=\"navbar-absolute fixed-top\"\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref={this.sidebarToggle}\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand href=\"/\">{\"Testing\"}</NavbarBrand>\n          </div>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n            <form>\n              <InputGroup className=\"no-border\">\n                <Input placeholder=\"Search...\" />\n                <InputGroupAddon addonType=\"append\">\n                  <InputGroupText>\n                    <i className=\"nc-icon nc-zoom-split\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </form>\n            <Nav navbar>\n              <NavItem>\n                <Link to=\"#pablo\" className=\"nav-link btn-magnify\">\n                  <i className=\"nc-icon nc-layout-11\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Stats</span>\n                  </p>\n                </Link>\n              </NavItem>\n              <Dropdown\n                nav\n                isOpen={this.state.dropdownOpen}\n                toggle={e => this.dropdownToggle(e)}\n              >\n                <DropdownToggle caret nav>\n                  <i className=\"nc-icon nc-bell-55\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Some Actions</span>\n                  </p>\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem tag=\"a\">Action</DropdownItem>\n                  <DropdownItem tag=\"a\">Another Action</DropdownItem>\n                  <DropdownItem tag=\"a\">Something else here</DropdownItem>\n                </DropdownMenu>\n              </Dropdown>\n              {/*<NavItem>\n                <Link to=\"#pablo\" className=\"nav-link btn-rotate\">\n                  <i className=\"nc-icon nc-settings-gear-65\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Account</span>\n                  </p>\n                </Link>\n              </NavItem>\n            */}\n\n\n              <NavItem>\n                <Link to=\"/login\" className=\"nav-link btn-rotate\">\n                  <i className=\"nc-icon nc-button-power\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Logout</span>\n                  </p>\n                </Link>\n              </NavItem>\n\n\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return null;\n}\n\nHeader = reduxForm({\n    form: 'editForm',\n    validate, \n  })(Header)\n\nexport default connect(mapStateToProps, {login})(Header);\n","import {\n    LOGIN,\n    LOGIN_SECCESS,\n    LOGIN_ERROR,\n} from './Constants';\nimport {API_URL} from '../../utils/constant';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nexport function getLogin(data) {\n    return {\n        type: LOGIN,\n        data,\n    };\n}\n\nexport function getLoginSuccess(data) {\n    return {\n        type: LOGIN_SECCESS,\n        data,\n    };\n}\nexport function getLoginError(error) {\n    return {\n        type: LOGIN_ERROR,\n        error,\n    };\n}\n\n\nexport function login(data) {\n    return dispatch => {\n        dispatch(getLogin());\n        fetch(API_URL+'adminLogin',{\n            method:'POST',\n            body: JSON.stringify(data),\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) {\n                    toast.warning(res.message);\n                    throw (res.error);\n                }\n                toast.success(res.message);\n                dispatch(getLoginSuccess(res));\n                return res;\n            })\n            .catch(error => {\n                dispatch(getLoginError(error));\n            })\n    }\n}\n\n","export const LOGIN = 'LOGIN';\nexport const LOGIN_SECCESS = 'GET_TABLE_DATA_SUCCESS';\nexport const LOGIN_ERROR = 'GET_TABLE_DATA_ERROR';\n","import './sidebar.css';\nimport {connect} from 'react-redux'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport React,{Component} from 'react';\n// import Alert from 'react-s-alert';\nimport {Field, reduxForm, reset, change} from 'redux-form';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { login } from './Actions';\nimport {renderTextField,renderAutoCompleteMultipleSelection} from '../../utils/components'\n// import {validate} from './validate';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Header from '../header/index';\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.userName) {\n    errors.userName = 'Please input User Name';\n  }\n  return errors;\n};\n\n// const logo = '../../assets/img/barbar.jpeg';\nconst logo = \"https://image.shutterstock.com/image-vector/beauty-saloon-logo-vector-illustration-260nw-420000811.jpg\";\n\nclass Sidebar extends Component {\n  constructor() {\n    super();\n    this.state = ({\n     \n    });\n    this.activeRoute.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillMount(){\n    let masterData = {masterData: 'masterLocation'};\n    // this.props.getMasterData(masterData);\n  }\n   activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  onSubmit(formData){\n      // toast.success('You have successfully login!.'+JSON.stringify(formData));\n      this.props.login(formData)\n      // alert(JSON.stringify(formData));\n  }\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div\n        className=\"sidebar\"\n        data-color={this.props.bgColor}\n        data-active-color={this.props.activeColor}\n      >\n        <div className=\"logo\">\n          <a\n            href=\"\"\n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"react-logo\" />\n            </div>\n          </a>\n          <a\n            href=\"https://www.creative-tim.com\"\n            className=\"simple-text logo-normal\"\n          >\n            Salon System\n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref={this.sidebar}>\n          <Nav>\n            {this.props.routes.map((prop, key) => {\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return null;\n}\n\nSidebar = reduxForm({\n    form: 'editForm',\n    validate, \n  })(Sidebar)\n\nexport default connect(mapStateToProps, {login})(Sidebar);\n","import {\n    LOGIN,\n    LOGIN_SECCESS,\n    LOGIN_ERROR,\n} from './Constants';\nimport {API_URL} from '../../utils/constant';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nexport function getLogin(data) {\n    return {\n        type: LOGIN,\n        data,\n    };\n}\n\nexport function getLoginSuccess(data) {\n    return {\n        type: LOGIN_SECCESS,\n        data,\n    };\n}\nexport function getLoginError(error) {\n    return {\n        type: LOGIN_ERROR,\n        error,\n    };\n}\n\n\nexport function login(data) {\n    return dispatch => {\n        dispatch(getLogin());\n        fetch(API_URL+'adminLogin',{\n            method:'POST',\n            body: JSON.stringify(data),\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) {\n                    toast.warning(res.message);\n                    throw (res.error);\n                }\n                toast.success(res.message);\n                dispatch(getLoginSuccess(res));\n                return res;\n            })\n            .catch(error => {\n                dispatch(getLoginError(error));\n            })\n    }\n}\n\n","export const SINGUP = 'SINGUP';\nexport const SINGUP_SECCESS = 'GET_SINGUP_SUCCESS';\nexport const SINGUP_ERROR = 'GET_SINGUP_ERROR';\n","import './signup.css';\nimport {connect} from 'react-redux'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport React,{Component} from 'react';\n// import Alert from 'react-s-alert';\nimport {Field, reduxForm, reset, change} from 'redux-form';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { signup } from './Actions';\nimport {renderTextField,renderSelectField} from '../../utils/components'\n// import {validate} from './validate';\nimport MenuItem from 'material-ui/MenuItem'\n\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.userName) {\n    errors.userName = 'Please input User Name';\n  }\n  return errors;\n};\n\n\n\nclass Signup extends Component {\n  constructor() {\n    super();\n    this.state = ({\n     \n    });\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillMount(){\n    let masterData = {masterData: 'masterLocation'};\n    // this.props.getMasterData(masterData);\n  }\n\n  onSubmit(formData){\n      this.props.signup(formData);\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div>\n            <div className=\"readmin-panel\">\n                    <div className=\"page_header col-12\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-12 text-right useful_btns\">\n                                <h2 className=\"page_title\">Signup</h2>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"panel-body\">\n                        <form className=\"readmin-form custom_form\" onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n                            <div className=\"row\">\n                               <div className=\"col-sm-4\">\n                                    <Field\n                                        name=\"MobileNo\"\n                                        label=\"Mobile No\"\n                                        component={renderTextField}/>\n                               </div>\n                                <div className=\"col-sm-4\">\n                                    <Field\n                                        name=\"UserName\"\n                                        label=\"User Name\"\n                                        component={renderTextField}/>\n                               </div>\n                                <div className=\"col-sm-4\">\n                                    <Field\n                                        name=\"Password\"\n                                        label=\"Password\"\n                                        type=\"password\"\n                                        component={renderTextField}/>\n                               </div>\n                                <div className=\"col-sm-4\">\n                                    <Field\n                                        name=\"E\"mail\n                                        label=\"Email\"\n                                        component={renderTextField}/>\n                               </div>\n                           </div>\n                           <button type=\"submit\"className=\"btn btn-primary\">submit</button>\n                           <Link to=\"/login\">Login</Link>\n\n                        </form>\n                    </div>\n            </div>\n       </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return null;\n}\n\nSignup = reduxForm({\n    form: 'editForm',\n    validate, \n  })(Signup)\n\nexport default connect(mapStateToProps, {signup})(Signup);\n","import {\n    SINGUP,\n    SINGUP_SECCESS,\n    SINGUP_ERROR,\n} from './Constants';\n\nimport {API_URL} from '../../utils/constant';\n\nexport function getsignup(data) {\n    return {\n        type: SINGUP,\n        data,\n    };\n}\n\nexport function getsignupSuccess(data) {\n    return {\n        type: SINGUP_SECCESS,\n        data,\n    };\n}\nexport function getsignupError(error) {\n    return {\n        type: SINGUP_ERROR,\n        error,\n    };\n}\n\n\n\nexport function signup(data) {\n    return dispatch => {\n        dispatch(getsignup());\n        fetch(API_URL+'registration',\n             {\n                body: JSON.stringify(data),\n                method: 'post',\n                  // headers: jsonApiHeader(getState().login.access_token, 'application/json'),\n                })\n            .then(res => res.json())\n            .then(res => {\n                debugger\n                if (res.error) {\n                    throw (res.error);\n                }\n                dispatch(getsignupSuccess(res));\n                return res;\n            })\n            .catch(error => {\n                dispatch(getsignupError(error));\n            })\n    }\n}\n\n\n\n","import React, { Component } from 'react';\nimport ReactDynamicModal from 'react-draggable-resizable-modal';\nimport Alert from 'react-s-alert';\n\nexport default class DraggableModal extends Component {\n\n\n  handleOnRequestClose = (e, payerServiceCodeId) => {\n    Alert.warning('Are you sure, you want close this modal?', {\n      position: 'bottom-right',\n      effect: 'slide',\n      timeout: 10000,\n      customFields: {\n        displayComponent: true,\n        handleButtonClick: this.handleAlertClick,\n        // id: payerServiceCodeId,\n      },\n    });\n  };\n\n  handleAlertClick = (event, payerServiceCodeId) => {\n    this.props.handleClose();\n    Alert.closeAll();\n  };\n\n\n  render() {\n    const { handleClose } = this.props\n    let that = this;\n    document.onkeydown = function (evt) {\n      evt = evt || window.event;\n      var isEscape = false;\n      if (\"key\" in evt) {\n        isEscape = (evt.key === \"Escape\" || evt.key === \"Esc\");\n      } else {\n        isEscape = (evt.keyCode === 27);\n      }\n      if (isEscape) {\n        that.props.isOpen && that.handleOnRequestClose();\n      }\n    };\n    let heightCheck = window.screen.availHeight - 200 < this.props.minHeight ? true : false;\n    let width = Math.floor((window.screen.availWidth * 12) / 100);\n    // this.props.handleClose\n    return (\n      <ReactDynamicModal onRequestClose={this.handleOnRequestClose}\n        // initHeight={this.props.minHeight<400?400:this.props.minHeight}\n        // minHeight={this.props.minHeight}\n        initHeight={heightCheck ? window.screen.availHeight - 200 : (this.props.minHeight < 400 ? 400 : this.props.minHeight - 50)}\n        minWidth={width}\n        minHeight={heightCheck ? window.screen.availHeight - 200 : (this.props.minHeight < 400 ? 400 : this.props.minHeight - 50)}\n        // minWidth={800}\n        initWidth={this.props.width ? this.props.width : 800}\n        isOpen={this.props.isOpen}\n        headerValue={this.props.headerValue}\n        data={this.props.data}\n        actions={this.props.actions}\n        footerText={this.props.footerText ? this.props.footerText : ''}\n        iscloseButton={this.props.iscloseButton ? this.props.iscloseButton : false}\n        overlay={this.props.overlay === false ? this.props.overlay : true}\n      />\n    );\n  }\n}","import {\n    ADDSERVICE,\n    ADDSERVICE_SECCESS,\n    ADDSERVICE_ERROR,\n    ADDAllSERVICE,\n    ADDAllSERVICE_SECCESS,\n    ADDAllSERVICE_ERROR,\n    DELETESERVICE,\n    DELETESERVICE_ERROR,\n    DELETESERVICE_SECCESS,\n    GETBYIDSERVICE,\n    GETBYIDSERVICE_SECCESS,\n    GETBYIDSERVICE_ERROR\n} from './Constants';\nimport { ToastContainer, toast } from 'react-toastify';\nimport {API_URL} from '../../utils/constant';\nimport {Field, reduxForm, reset, change} from 'redux-form';\n\nexport function getservice(data) {\n    return {\n        type: ADDSERVICE,\n        data,\n    };\n}\n\nexport function getserviceSuccess(data) {\n    return {\n        type: ADDSERVICE_SECCESS,\n        data,\n    };\n}\nexport function getserviceError(error) {\n    return {\n        type: ADDSERVICE_ERROR,\n        error,\n    };\n}\n\nexport function getallservice(data) {\n    return {\n        type: ADDAllSERVICE,\n        data,\n    };\n}\nexport function getAllserviceSuccess(data) {\n    return {\n        type: ADDAllSERVICE_SECCESS,\n        data,\n    };\n}\nexport function getAllserviceError(error) {\n    return {\n        type: ADDAllSERVICE_ERROR,\n        error,\n    };\n}\n\n\nexport function deleteservice(data) {\n    return {\n        type: DELETESERVICE,\n        data,\n    };\n}\nexport function deleteserviceSuccess(data) {\n    return {\n        type: DELETESERVICE_SECCESS,\n        data,\n    };\n}\nexport function deleteserviceError(error) {\n    return {\n        type: DELETESERVICE_ERROR,\n        error,\n    };\n}\n\n\nexport function getByIdservice(data) {\n    return {\n        type: GETBYIDSERVICE,\n        data,\n    };\n}\nexport function getByIdserviceSuccess(data) {\n    return {\n        type: GETBYIDSERVICE_SECCESS,\n        data,\n    };\n}\nexport function getByIdserviceError(error) {\n    return {\n        type: GETBYIDSERVICE_ERROR,\n        error,\n    };\n}\n\n\n\nexport function addService(data) {\n    return dispatch => {\n        dispatch(getservice());\n        fetch(API_URL+'addService',\n             {\n                body: JSON.stringify(data),\n                method: 'POST',\n                headers: {'Content-Type':'application/json'},\n                })\n            .then(res => res.json())\n            .then(res => {\n                if(res.statusCode && res.statusCode==500){\n                    toast.warning(res.message);\n                }\n                toast.success(res.message);\n                dispatch(getserviceSuccess(res));\n                dispatch(getServices());\n                dispatch(reset('serviceForm'));\n                return res;\n            })\n            .catch(error => {\n                dispatch(getserviceError(error));\n            })\n    }\n}\n\n\nexport function getServices(data) {\n    return dispatch => {\n        dispatch(getallservice());\n        fetch(API_URL+'getAllServices',\n             {\n                // body: JSON.stringify(data),\n                method: 'GET',\n                headers: {'Content-Type':'application/json'},  \n                })\n            .then(res => res.json())\n            .then(res => {\n                if(res.statusCode && res.statusCode==500){\n                    toast.warning(res.message);\n                }\n                toast.success(res.message);\n                dispatch(getAllserviceSuccess(res));\n                return res;\n            })\n            .catch(error => {\n                dispatch(getAllserviceError(error));\n            })\n    }\n}\n\n\nexport function getServiceById(data) {\n    return dispatch => {\n        dispatch(getByIdservice());\n        fetch(API_URL+'getServiceById/'+data,\n             {\n                // body: JSON.stringify(data),\n                method: 'GET',\n                headers: {'Content-Type':'application/json'},  \n                })\n            .then(res => res.json())\n            .then(res => {\n                if(res.statusCode && res.statusCode==500){\n                    toast.warning(res.message);\n                }\n                toast.success(res.message);\n                dispatch(getByIdserviceSuccess(res));\n                return res;\n            })\n            .catch(error => {\n                dispatch(getByIdserviceError(error));\n            })\n    }\n}\n\n\nexport function deleteService(data) {\n    return dispatch => {\n        dispatch(getallservice());\n        fetch(API_URL+'deleteServiceById/'+data,\n             {\n                // body: JSON.stringify(data),\n                method: 'DELETE',\n                headers: {'Content-Type':'application/json'},  \n                })\n            .then(res => res.json())\n            .then(res => {\n                if(res.statusCode && res.statusCode==500){\n                     toast.warning(res.message);   \n                }\n                toast.success(res.message);\n                dispatch(getAllserviceSuccess(res));\n                dispatch(getServices());\n                return res;\n            })\n            .catch(error => {\n                dispatch(getAllserviceError(error));\n            })\n    }\n}\n\n\n\n\n","import './services.css';\nimport {connect} from 'react-redux'\nimport React,{Component} from 'react';\n// import Alert from 'react-s-alert';\nimport {Field, reduxForm, reset, change} from 'redux-form';\nimport {renderTextField,renderSelectField,renderTimePicker,CommonButton} from '../../utils/components';\nimport DraggableModal from '../../utils/DraggableModal'\n// import {validate} from './validate';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport Alert from 'react-s-alert';\n\n\n\nimport { addService,getServices,deleteService,getServiceById } from './Actions';\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.ServiceName) {\n    errors.ServiceName = 'Please enter service name';\n  }\n   if (!values.amount) {\n    errors.amount = 'Please enter amount';\n  }\n   if (!values.totalTime) {\n    errors.totalTime = 'Please enter time';\n  }\n  return errors;\n};\n\n\n\nclass Services extends Component {\n  constructor() {\n    super();\n    this.state = ({\n     isAdd:false,\n     totalTime:new Date(),\n     open:false,\n     serviceId : null\n    });\n    this.onDateChange = this.onDateChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillMount(){\n    this.props.getServices();\n  }\n\n  onSubmit(formData){\n      this.props.addService(formData);\n      this.setState({isAdd:false,open:false})\n      // this.props.getServices();\n      // this.props.dispatch.reset('serviceForm')\n  }\n\n  handleDeleteClick = (e,data,index)=>{\n     Alert.warning('Are you sure you want to delete service?', {\n      position: 'bottom-right',\n      effect: 'slide',\n      timeout: 10000,\n      customFields: {\n        displayComponent: true,\n        handleButtonClick: this.handleActiveAlertClick,\n        // value: e.target.value,\n        id: data,\n        // isActive: user.isBlock,\n      },\n    });\n    \n  }\n\n  handleActiveAlertClick = (event, user, isActive) => {\n    this.props.deleteService(user._id);\n    Alert.closeAll();\n    // this.props.getServices();\n  };\n\n  handleEditClick = (e,data)=>{\n    this.props.getServiceById(data._id);\n    this.setState({open:true,serviceId:data._id});\n  }\n\n\n  renderTableList = () => {\n    if (this.props.serviceList && this.props.serviceList.length > 0) {\n\n      return (\n        this.props.serviceList.map((data, index) => {\n          return (\n            <tr key={index}>\n            <td>{index+1}#</td>\n              <td>{data.ServiceName}</td>\n              <td>{data.amount}</td>\n              <td>{data.totalTime}</td>\n              <td>\n              <button type=\"button\" onClick={(e) => this.handleEditClick(e,data)} title=\"Edit\" className=\"tbactionbtn blue-hover\"><i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></button>\n              <button type=\"button\" onClick={(e) => this.handleDeleteClick(e,data,index)} title=\"Delete\" className=\"tbactionbtn red-hover\"><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\n              </td>\n            </tr>\n          );\n\n        })\n      );\n    } else {\n      return (<tr>\n        <td colSpan='7' className=\"text-center no-record\">{this.props.loading ? 'Loading, Please wait...' : 'No record found.'}</td>\n      </tr>);\n    }\n  }\n\n   onDateChange = (input, value)=>{\n    input.onChange(moment(value).format());\n    this.setState({\n      [input.name]: null,\n    });\n  }\n\n  addService = () =>{\n    this.setState({isAdd:true,open:true})\n  }\n  // openModal = ()=>{\n  //   this.setState({open:true})\n  // }\n  handleClose =()=>{\n    this.setState({open:false})\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n     const tableClass = classNames({\n      'table': true,\n      'table-striped': true,\n      'table-bordered': true,\n      'table-hover': true,\n      'table-condensed': true,\n      'customtable': true,\n      'recivefax_tbl': true\n    });\n\n    const actions = [\n      <CommonButton className=\"mr-15 grey_btn\" label=\"Cancel\" onClick={this.handleClose} />,\n      <CommonButton type=\"submit\" primary={true} label=\"Save\" onClick={handleSubmit(this.onSubmit.bind(this))} />,\n    ];\n\n    return (\n      <div>\n\n            <div className=\"readmin-panel\">\n                    <div className=\"page_header col-12\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-12 text-right useful_btns\">\n                                <h2 className=\"page_title\">Add Service</h2>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row btnallignment\">\n                          <button className=\"btn btn-primary\" onClick={this.addService}>Add</button>\n                          {/*<button className=\"btn btn-primary\" onClick={this.openModal}>Open Modal</button>*/}\n                       </div>\n                   \n                   \n\n\n\n                    <div className=\"panel-body\">\n                       \n\n                      <div className=\"table-responsive col-sm-12\">\n                        <table className={tableClass}>\n                          <thead>\n                            <tr>\n                               <th width=\"5%\">S.No#</th>\n                              <th width=\"25%\">Service Type</th>\n                              <th width=\"25%\">Amount</th>\n                              <th width=\"20%\">Time</th>\n                              <th width=\"25%\">Action</th>\n\n\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {this.renderTableList()}\n                          </tbody>\n                        </table>\n                        </div>\n\n                        {this.state.open ?\n                          <DraggableModal\n                            isOpen={this.state.open}\n                            minHeight={document.getElementById('AuthorizationModal') ? document.getElementById('AuthorizationModal').offsetHeight + 150 : 400}\n                            headerValue={this.state.serviceId ? 'Edit Service' : 'Add Service'}\n                            handleClose={this.handleClose}\n                            actions={actions}\n                            data={\n                              <div className=\"row\" id=\"AuthorizationModal\">\n                                <div className=\"col-sm-12\">\n                                  <form className=\"readmin-form custom_form\" noValidate>\n                                    <div className=\"col-12\">\n                                       <form className=\"readmin-form custom_form\">\n                            <div className=\"row\">\n                              \n                                <div className=\"col-sm-4\">\n                                    <Field\n                                        name=\"ServiceName\"\n                                        label=\"Service Name\"\n                                        component={renderTextField}/>\n                               </div>\n                                <div className=\"col-sm-4\">\n                                    <Field\n                                        name=\"amount\"\n                                        label=\"Amount\"\n                                        component={renderTextField}/>\n                               </div>\n                               \n                                <div className=\"col-sm-4\">\n                                 <Field\n                                        name=\"totalTime\"\n                                        label=\"Service Time\"\n                                        component={renderTextField}/>\n                               </div>\n                           </div>\n\n                        </form>\n                                  </div>\n                                  </form>\n                                  </div>\n                                  </div>\n                                      }\n                                       /> : null}\n                    </div>\n            </div>\n       </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  let initialValueData = {};\n\n  if(state.serviceReducer && state.serviceReducer.serviceDataByID){\n    console.log('state.serviceReducer.serviceDataByID',state.serviceReducer.serviceDataByID);\n    initialValueData = {\n      'ServiceName' : state.serviceReducer.serviceDataByID.ServiceName ? state.serviceReducer.serviceDataByID.ServiceName : '',\n      'amount' : state.serviceReducer.serviceDataByID.amount ? state.serviceReducer.serviceDataByID.amount : 0,\n      'totalTime' : state.serviceReducer.serviceDataByID.totalTime ? state.serviceReducer.serviceDataByID.totalTime :'00:00'\n  }\n}\n\n  return {\n    serviceList : state.serviceReducer.serviceData,\n    serviceDataByList : state.serviceReducer.serviceDataByID,\n    initialValues: initialValueData,\n  };\n}\n\nServices = reduxForm({\n    form: 'serviceForm',\n    validate, \n  })(Services)\n\nexport default connect(mapStateToProps, {addService,getServices,deleteService,getServiceById})(Services);\n","import {\n    UPDATESHOP,\n    UPDATESHOP_SECCESS,\n    UPDATESHOP_ERROR,\n    SHOP,\n    SHOP_SECCESS,\n    SHOP_ERROR,\n    DELETESHOP,\n    DELETESHOP_ERROR,\n    DELETESHOP_SECCESS\n} from './Constants';\nimport { ToastContainer, toast } from 'react-toastify';\nimport {API_URL} from '../../utils/constant';\n\nexport function updateShop(data) {\n    return {\n        type: UPDATESHOP,\n        data,\n    };\n}\n\nexport function updateShopSuccess(data) {\n    return {\n        type: UPDATESHOP_SECCESS,\n        data,\n    };\n}\nexport function updateShopError(error) {\n    return {\n        type: UPDATESHOP_ERROR,\n        error,\n    };\n}\n\nexport function getallshop(data) {\n    return {\n        type: SHOP,\n        data,\n    };\n}\nexport function getAllshopSuccess(data) {\n    return {\n        type: SHOP_SECCESS,\n        data,\n    };\n}\nexport function getAllshopError(error) {\n    return {\n        type: SHOP_ERROR,\n        error,\n    };\n}\n\n\nexport function deleteshop(data) {\n    return {\n        type: DELETESHOP,\n        data,\n    };\n}\nexport function deleteshopSuccess(data) {\n    return {\n        type: DELETESHOP_SECCESS,\n        data,\n    };\n}\nexport function deleteshopError(error) {\n    return {\n        type: DELETESHOP_ERROR,\n        error,\n    };\n}\n\n\n\nexport function getShopList(data) {\n    return dispatch => {\n        dispatch(getallshop());\n        fetch(API_URL+'getAllShops',\n             {\n                body: JSON.stringify(data),\n                method: 'GET',\n                headers: {'Content-Type':'application/json'},\n                })\n            .then(res => res.json())\n            .then(res => {\n                if(res.statusCode && res.statusCode==500){\n                    toast.warning(res.message);\n                }\n                toast.success(res.message);\n                dispatch(getAllshopSuccess(res));\n                return res;\n            })\n            .catch(error => {\n                dispatch(getAllshopError(error));\n            })\n    }\n}\n\n\nexport function updateShopData(id,data) {\n    return dispatch => {\n        dispatch(updateShop());\n        fetch(API_URL+'updateShopById/'+id,\n             {\n                body: JSON.stringify(data),\n                method: 'PATCH',\n                headers: {'Content-Type':'application/json'},  \n                })\n            .then(res => res.json())\n            .then(res => {\n                if(res.statusCode && res.statusCode==500){\n                    toast.warning(res.message);\n                }\n                toast.success(res.message);\n                // dispatch(getShopList());\n                dispatch(updateShopSuccess(res));\n                return res;\n            })\n            .catch(error => {\n                dispatch(updateShopError(error));\n            })\n    }\n}\n\n\nexport function deleteShop(data) {\n    return dispatch => {\n        dispatch(deleteshop());\n        fetch(API_URL+'deleteShopById/'+data,\n             {\n                // body: JSON.stringify(data),\n                method: 'DELETE',\n                headers: {'Content-Type':'application/json'},  \n                })\n            .then(res => res.json())\n            .then(res => {\n                if(res.statusCode && res.statusCode==500){\n                     toast.warning(res.message);   \n                }\n                toast.success(res.message);\n                dispatch(deleteshop());\n                dispatch(deleteshopSuccess(res));\n                return res;\n            })\n            .catch(error => {\n                dispatch(deleteshopError(error));\n            })\n    }\n}\n\n\n\n\n","import './services.css';\nimport {connect} from 'react-redux'\nimport React,{Component} from 'react';\n// import Alert from 'react-s-alert';\nimport {Field, reduxForm, reset, change} from 'redux-form';\nimport {renderTextField,renderSelectField,renderTimePicker,renderToggleButton} from '../../utils/components';\nimport DraggableModal from '../../utils/DraggableModal'\n// import {validate} from './validate';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport Alert from 'react-s-alert';\n\n\nimport { getShopList,deleteShop,updateShopData} from './Actions';\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.ServiceName) {\n    errors.ServiceName = 'Please enter service name';\n  }\n   if (!values.amount) {\n    errors.amount = 'Please enter amount';\n  }\n   if (!values.totalTime) {\n    errors.totalTime = 'Please enter time';\n  }\n  return errors;\n};\n\nconst styles = {\n  thumbOff: {\n    width: '15px',\n    height: '15px',\n    top: '2px',\n  },\n  trackOff: {\n    height: '12px',\n  },\n  thumbSwitched: {\n    width: '15px',\n    height: '15px',\n    left: '61%',\n    top: '2px',\n  },\n  trackSwitched: {\n    height: '12px',\n  },\n};\n\nclass Shop extends Component {\n  constructor() {\n    super();\n    this.state = ({\n     isAdd:false,\n     totalTime:new Date(),\n     open:false,\n     salonStatus:false\n    });\n  }\n\n  componentWillMount(){\n    this.props.getShopList();\n  }\n\n \n\n  handleDeleteClick = (e,data)=>{\n    \n     Alert.warning('Are you sure you want to delete service?', {\n      position: 'bottom-right',\n      effect: 'slide',\n      timeout: 10000,\n      customFields: {\n        displayComponent: true,\n        handleButtonClick: this.handleDeleteAlertClick,\n        id: data,\n      },\n    });\n  }\n\n    handleDeleteAlertClick = (event, user, isActive) => {\n    this.props.deleteShop(user._id);\n    Alert.closeAll();\n    this.props.getShopList();\n  };\n\n\n  handleActiveAlertClick = (event, user, isActive) => {\n    user.salonStatus =  !user.salonStatus;\n    this.setState({salonStatus:!user.salonStatus});\n    this.props.updateShopData(user._id,user);\n    Alert.closeAll();\n    // this.props.getShopList();\n  };\n\n  onActiveToggle = (e, index, user) => {\n    Alert.warning('Are you sure you want to change user\\'s active status?', {\n      position: 'bottom-right',\n      effect: 'slide',\n      timeout: 10000,\n      customFields: {\n        displayComponent: true,\n        handleButtonClick: this.handleActiveAlertClick,\n        // value: e.target.value,\n        id: user,\n        // isActive: user.isBlock,\n      },\n    });\n\n  }\n\n\n  renderTableList = () => {\n    if (this.props.shopList && this.props.shopList.length > 0) {\n\n      return (\n        this.props.shopList.map((data, index) => {\n          return (\n            <tr key={index}>\n            <td>{index+1}#</td>\n              <td>{data.SalonName}</td>\n              <td>{data.ContactNo ? data.ContactNo : '-'}</td>\n              <td>{data.CityName ? data.CityName : '-'}</td>\n              <td>{data.StateName ? data.StateName : '-'}</td>\n              <td>{data.Zipcode ? data.Zipcode : '-'}</td>\n              <td>{data.Address ? data.Address : '-'}</td>\n                <td>{data.salonStatus ? 'Approved' : 'Pending'}</td>\n                <td>\n                     <Field className=\"no_margin w-45p\"\n                      name=\"active_status\"\n                      toggled={data.salonStatus ? data.salonStatus : false}\n                      component={renderToggleButton}\n                      onChange={(e) => this.onActiveToggle(e, index, data)}\n                      style={styles.toggle}\n                      thumbStyle={styles.thumbOff}\n                      trackStyle={styles.trackOff}\n                      thumbSwitchedStyle={styles.thumbSwitched}\n                      trackSwitchedStyle={styles.trackSwitched}\n                    />\n                </td>\n              <td>\n              {/*<button type=\"button\" onClick={(e) => this.handleEditClick(e,data)} title=\"Edit\" className=\"tbactionbtn blue-hover\"><i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></button>*/}\n              <button type=\"button\" onClick={(e) => this.handleDeleteClick(e,data)} title=\"Delete\" className=\"tbactionbtn red-hover\"><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\n              </td>\n            </tr>\n          );\n\n        })\n      );\n    } else {\n      return (<tr>\n        <td colSpan='7' className=\"text-center no-record\">{this.props.loading ? 'Loading, Please wait...' : 'No record found.'}</td>\n      </tr>);\n    }\n  }\n\n   onDateChange = (input, value)=>{\n    input.onChange(moment(value).format());\n    this.setState({\n      [input.name]: null,\n    });\n  }\n\n \n  render() {\n    const { handleSubmit } = this.props;\n     const tableClass = classNames({\n      'table': true,\n      'table-striped': true,\n      'table-bordered': true,\n      'table-hover': true,\n      'table-condensed': true,\n      'customtable': true,\n      'recivefax_tbl': true\n    });\n\n    return (\n      <div>\n\n            <div className=\"readmin-panel\">\n                    <div className=\"page_header col-12\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-12 text-right useful_btns\">\n                                <h2 className=\"page_title\">Add Service</h2>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row btnallignment\">\n                         <div className=\"btnallignment\">\n                          {/*<button className=\"btn btn-primary\" onClick={this.addService}>Add</button>*/}\n                       </div>\n                    </div>   \n                   \n                   \n\n\n\n                    <div className=\"panel-body\">\n                       \n\n                       {!this.state.isAdd ?\n                      <div className=\"table-responsive col-sm-12\">\n                        <table className={tableClass}>\n                          <thead>\n                            <tr>\n                               <th width=\"5%\">S.No#</th>\n                              <th width=\"10%\">Salon Name</th>\n                              <th width=\"10%\">ContactNo</th>\n                              <th width=\"10%\">CityName</th>\n                              <th width=\"10%\">State</th>\n                              <th width=\"10%\">Zip-code</th>\n                              <th width=\"20%\">Address</th>\n                              <th width=\"10%\">Status</th>\n                              <th width=\"10%\"></th>\n                              <th width=\"10%\">Action</th>\n\n\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {this.renderTableList()}\n                          </tbody>\n                        </table>\n                        </div>\n                   :null}\n\n\n                       \n                    </div>\n            </div>\n       </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  console.log(state);\n  return {\n    shopList : state.shopReducer.shopData\n  };\n}\n\nShop = reduxForm({\n    form: 'serviceForm',\n    validate, \n  })(Shop)\n\nexport default connect(mapStateToProps, {getShopList,deleteShop,updateShopData})(Shop);\n","import {\n    ADDAllUSER,\n    ADDAllUSER_SECCESS,\n    ADDAllUSER_ERROR,\n    DELETEUSER,\n    DELETEUSER_SECCESS,\n    DELETEUSER_ERROR\n} from './Constants';\nimport { ToastContainer, toast } from 'react-toastify';\nimport {API_URL} from '../../utils/constant';\nimport {Field, reduxForm, reset, change} from 'redux-form';\n\n\n\nexport function getalluser(data) {\n    return {\n        type: ADDAllUSER,\n        data,\n    };\n}\nexport function getAlluserSuccess(data) {\n    return {\n        type: ADDAllUSER_SECCESS,\n        data,\n    };\n}\nexport function getAlluserError(error) {\n    return {\n        type: ADDAllUSER_ERROR,\n        error,\n    };\n}\n\n\nexport function deleteUser(data) {\n    return {\n        type: DELETEUSER,\n        data,\n    };\n}\nexport function deleteUserSuccess(data) {\n    return {\n        type: DELETEUSER_SECCESS,\n        data,\n    };\n}\nexport function deleteUserError(error) {\n    return {\n        type: DELETEUSER_ERROR,\n        error,\n    };\n}\n\n\n\n\nexport function getUsers(data) {\n    return dispatch => {\n        dispatch(getalluser());\n        fetch(API_URL+'getAllUsers',\n             {\n                // body: JSON.stringify(data),\n                method: 'GET',\n                headers: {'Content-Type':'application/json'},  \n                })\n            .then(res => res.json())\n            .then(res => {\n                if(res.statusCode && res.statusCode==500){\n                    toast.warning(res.message);\n                }\n                toast.success(res.message);\n                dispatch(getAlluserSuccess(res));\n                return res;\n            })\n            .catch(error => {\n                dispatch(getAlluserError(error));\n            })\n    }\n}\n\n\nexport function deleteUserById(data) {\n    return dispatch => {\n        dispatch(deleteUser());\n        fetch(API_URL+'deleteUserById/'+data,\n             {\n                // body: JSON.stringify(data),\n                method: 'DELETE',\n                headers: {'Content-Type':'application/json'},  \n                })\n            .then(res => res.json())\n            .then(res => {\n                if(res.statusCode && res.statusCode==500){\n                     toast.warning(res.message);   \n                }\n                toast.success(res.message);\n                dispatch(deleteUserSuccess(res));\n                dispatch(getUsers());\n                return res;\n            })\n            .catch(error => {\n                dispatch(deleteUserError(error));\n            })\n    }\n}\n\n\n\n\n","import './users.css';\nimport {connect} from 'react-redux'\nimport React,{Component} from 'react';\n// import Alert from 'react-s-alert';\nimport {Field, reduxForm, reset, change} from 'redux-form';\nimport {renderTextField,renderSelectField,renderTimePicker,CommonButton} from '../../utils/components';\nimport DraggableModal from '../../utils/DraggableModal'\n// import {validate} from './validate';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport Alert from 'react-s-alert';\n\n\n\nimport { deleteUserById,getUsers } from './Actions';\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.ServiceName) {\n    errors.ServiceName = 'Please enter service name';\n  }\n   if (!values.amount) {\n    errors.amount = 'Please enter amount';\n  }\n   if (!values.totalTime) {\n    errors.totalTime = 'Please enter time';\n  }\n  return errors;\n};\n\n\n\nclass Users extends Component {\n  constructor() {\n    super();\n    this.state = ({\n     isAdd:false,\n     totalTime:new Date(),\n     open:false,\n     serviceId : null\n    });\n  }\n\n  componentWillMount(){\n    this.props.getUsers();\n  }\n\n  handleDeleteClick = (e,data,index)=>{\n     Alert.warning('Are you sure you want to delete service?', {\n      position: 'bottom-right',\n      effect: 'slide',\n      timeout: 10000,\n      customFields: {\n        displayComponent: true,\n        handleButtonClick: this.handleActiveAlertClick,\n        // value: e.target.value,\n        id: data,\n        // isActive: user.isBlock,\n      },\n    });\n    \n  }\n\n  handleActiveAlertClick = (event, user, isActive) => {\n    this.props.deleteUserById(user._id);\n    Alert.closeAll();\n  };\n\n  handleEditClick = (e,data)=>{\n    this.props.getServiceById(data._id);\n    this.setState({open:true,serviceId:data._id});\n  }\n\n\n  renderTableList = () => {\n    if (this.props.usersList && this.props.usersList.length > 0) {\n\n      return (\n        this.props.usersList.map((data, index) => {\n          return (\n            <tr key={index}>\n            <td>{index+1}#</td>\n              <td>{data.UserName ? data.UserName : ''}</td>\n              <td>{data.FirstName ? data.FirstName : ''}</td>\n              <td>{data.LastName ? data.LastName : ''}</td>\n              <td>{data.MobileNo ? data.MobileNo : ''}</td>\n              <td>{data.shops ? data.shops && data.shops.length : '0'}</td>\n              <td>{data.mobileVerificationStatus ? 'Approved' : 'Pending'}</td>\n              <td>\n              {/*<button type=\"button\" onClick={(e) => this.handleEditClick(e,data)} title=\"Edit\" className=\"tbactionbtn blue-hover\"><i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></button>*/}\n              <button type=\"button\" onClick={(e) => this.handleDeleteClick(e,data,index)} title=\"Delete\" className=\"tbactionbtn red-hover\"><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\n              </td>\n            </tr>\n          );\n\n        })\n      );\n    } else {\n      return (<tr>\n        <td colSpan='7' className=\"text-center no-record\">{this.props.loading ? 'Loading, Please wait...' : 'No record found.'}</td>\n      </tr>);\n    }\n  }\n \n\n  render() {\n    const { handleSubmit } = this.props;\n     const tableClass = classNames({\n      'table': true,\n      'table-striped': true,\n      'table-bordered': true,\n      'table-hover': true,\n      'table-condensed': true,\n      'customtable': true,\n      'recivefax_tbl': true\n    });\n\n     return (\n      <div>\n\n            <div className=\"readmin-panel\">\n                    <div className=\"page_header col-12\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-12 text-right useful_btns\">\n                                <h2 className=\"page_title\">Add Service</h2>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div className=\"panel-body\">\n                      <div className=\"table-responsive col-sm-12\">\n                        <table className={tableClass}>\n                          <thead>\n                            <tr>\n                               <th width=\"5%\">S.No#</th>\n                              <th width=\"20%\">User Name</th>\n                              <th width=\"20%\">First Name</th>\n                              <th width=\"20%\">Last Name</th>\n                              <th width=\"20%\">Mobile No</th>\n                              <th width=\"5%\">Total Shops</th>\n                              <th width=\"10%\">Status</th>\n                              <th width=\"10%\">Action</th>\n\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {this.renderTableList()}\n                          </tbody>\n                        </table>\n                        </div>\n                      \n                    </div>\n            </div>\n       </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    usersList : state.userReducer.users,\n  };\n}\n\nUsers = reduxForm({\n    form: 'userForm',\n    validate, \n  })(Users)\n\nexport default connect(mapStateToProps, {deleteUserById,getUsers})(Users);\n","// import Dashboard from \"views/Dashboard.jsx\";\n// import Notifications from \"views/Notifications.jsx\";\n// import Icons from \"views/Icons.jsx\";\n// import Typography from \"views/Typography.jsx\";\n// import TableList from \"views/Tables.jsx\";\n// import Maps from \"views/Map.jsx\";\n// import UserPage from \"views/User.jsx\";\n// import UpgradeToPro from \"views/Upgrade.jsx\";\n\nimport Signup from '../src/containers/signup/index';\nimport Services from '../src/containers/services/index';\nimport Shop from '../src/containers/shops/index';\nimport Users from '../src/containers/users/index';\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-bank\",\n    // component: Dashboard,\n    layout: \"/\"\n  },\n   {\n    path: \"/users\",\n    name: \"Users\",\n    icon: \"nc-icon nc-pin-3\",\n    component: Users,\n    layout: \"/dashboard\"\n  },\n  {\n    path: \"/service\",\n    name: \"Services\",\n    icon: \"nc-icon nc-diamond\",\n    component: Services,\n    layout: \"/dashboard\"\n  },\n  {\n    path: \"/shops\",\n    name: \"Shops\",\n    icon: \"nc-icon nc-pin-3\",\n    component: Shop,\n    layout: \"/dashboard\"\n  },\n  // {\n  //   path: \"/signup\",\n  //   name: \"Icons\",\n  //   icon: \"nc-icon nc-diamond\",\n  //   component: Signup,\n  //   layout: \"/dashboard\"\n  // },\n  // {\n  //   path: \"/maps\",\n  //   name: \"Maps\",\n  //   icon: \"nc-icon nc-pin-3\",\n  //   // component: Maps,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/notifications\",\n  //   name: \"Notifications\",\n  //   icon: \"nc-icon nc-bell-55\",\n  //   // component: Notifications,\n  //   layout: \"/admin\"\n  // },\n  \n  // {\n  //   path: \"/user-page\",\n  //   name: \"User Profile\",\n  //   icon: \"nc-icon nc-single-02\",\n  //   component: UserPage,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/tables\",\n  //   name: \"Table List\",\n  //   icon: \"nc-icon nc-tile-56\",\n  //   component: TableList,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/typography\",\n  //   name: \"Typography\",\n  //   icon: \"nc-icon nc-caps-small\",\n  //   component: Typography,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   pro: true,\n  //   path: \"/upgrade\",\n  //   name: \"Upgrade to PRO\",\n  //   icon: \"nc-icon nc-spaceship\",\n  //   component: UpgradeToPro,\n  //   layout: \"/admin\"\n  // }\n];\nexport default routes;\n","import './login.css';\nimport {connect} from 'react-redux'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport React,{Component} from 'react';\n// import Alert from 'react-s-alert';\nimport {Field, reduxForm, reset, change} from 'redux-form';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { login } from './Actions';\nimport {renderTextField,renderAutoCompleteMultipleSelection} from '../../utils/components'\n// import {validate} from './validate';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Header from '../header/index';\nimport Sidebar from '../sidebar/index';\nimport routes from \"../../routes.js\";\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = 'Please input User Name';\n  }\n  return errors;\n};\n\n\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = ({\n     \n    });\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillMount(){\n    let masterData = {masterData: 'masterLocation'};\n    // this.props.getMasterData(masterData);\n  }\n\n  onSubmit(formData){\n      console.log('inside component',formData)\n      this.props.login(formData)\n          this.props.history.push('/dashboard');\n  }\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div>\n            <div className=\"readmin-panel\">\n                    <div className=\"page_header col-12\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-12 text-right useful_btns\">\n                            <h2 className=\"text-center\">Admin Login</h2>\n                            </div>\n                        </div>\n                    </div>\n\n                    \n\n                    <div className=\"panel-body\">\n                        <form className=\"readmin-form custom_form\" onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n                            <div className=\"row\">\n                                \n                               <div className=\"col-sm-4\"></div>\n                                 <div className=\"col-sm-4\">\n                                      <Field\n                                          name=\"userName\"\n                                          label=\"User Name\"\n                                          component={renderTextField}/>\n                                 </div>\n                               <div className=\"col-sm-4 mt-5\"></div>\n                               </div>\n\n                               <div className=\"row\">\n                               <div className=\"col-sm-4 mt-5\"></div>\n                                <div className=\"col-sm-4 mt-5\">\n                                    <Field\n                                        type=\"password\"\n                                        name=\"password\"\n                                        label=\"Password\"\n                                        component={renderTextField}/>\n                                 </div>\n                                 <div className=\"col-sm-4 mt-5\"></div>\n                                 </div>\n\n                                 <div className=\"row\">\n                                 <div className=\"col-sm-4 mt-5\"></div>\n                                  <div className=\"col-sm-4\">\n                                      <button type=\"submit\"className=\"btn btn-primary mt-5\">submit</button>\n                                      {/*<Link to=\"/signup\">Signup</Link>*/}\n                                   </div>\n                                   <div className=\"col-sm-4 mt-5\"></div>\n                                 </div>\n\n\n\n\n                           \n\n                        </form>\n                    </div>\n            </div>\n       </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return null;\n}\n\nLogin = reduxForm({\n    form: 'editForm',\n    validate, \n  })(Login)\n\nexport default connect(mapStateToProps, {login})(Login);\n","import {\n    LOGIN,\n    LOGIN_SECCESS,\n    LOGIN_ERROR,\n} from './Constants';\nimport {API_URL} from '../../utils/constant';\nimport { ToastContainer, toast } from 'react-toastify';\nimport history from '../../utils/history';\n\nexport function getLogin(data) {\n    return {\n        type: LOGIN,\n        data,\n    };\n}\n\nexport function getLoginSuccess(data) {\n    return {\n        type: LOGIN_SECCESS,\n        data,\n    };\n}\nexport function getLoginError(error) {\n    return {\n        type: LOGIN_ERROR,\n        error,\n    };\n}\n\n\nexport function login(data) {\n    console.log('inside action',data);\n    return dispatch => {\n        dispatch(getLogin());\n        fetch(API_URL+'adminLogin',{\n            method:'POST',\n            body: JSON.stringify(data),\n            // headers: jsonApiHeader('','application/json'),\n            headers: {'Content-Type':'application/json'},\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) {\n                    toast.warning(res.message);\n                    throw (res.error);\n                }\n                history.push('dashboard');\n                toast.success(res.message);\n                dispatch(getLoginSuccess(res));\n                localStorage.setItem('authToken',res.token)\n                return res;\n            })\n            .catch(error => {\n                dispatch(getLoginError(error));\n            })\n    }\n}\n\n","import React from 'react';\nimport Alert from 'react-s-alert';\n\n\nexport default class AlertContentTemplate extends React.Component {\n  render() {\n    let style = this.props.customFields && this.props.customFields.displayComponent ? { backgroundColor: '#f39500', zIndex: 2000 } : { zIndex: 2000 };\n    \n    return (\n      <div className={this.props.classNames} id={this.props.id} style={style}>\n        {\n          this.props.customFields && this.props.customFields.displayComponent ? (\n            <div>\n              <div className='s-alert-box-inner'>\n                {this.props.message}\n              </div>\n              {this.props.customFields.customButtons ? (\n                <div>\n                  {this.props.customFields.customButtons.map((button, index) => {\n                    return <button key={index} className=\"whtbtnsm\" onClick={(e) => button.handleClick(e, button.param)}>{button.name.toUpperCase()}</button>;\n                  })\n                  }\n                </div>\n              ) : (\n                <div>\n                  <h3>{this.props.customFields.customerName}</h3>\n                  <button className=\"whtbtnsm\" onClick={(e) => this.props.customFields.handleButtonClick(e, this.props.customFields.id, this.props.customFields.userID, this.props.customFields.isActive)}>YES</button>\n                  <button className=\"whtbtnsm\" onClick={(e) => Alert.closeAll(this.props.id)}>No</button>\n                </div>\n              )\n              }\n            </div>\n          ) : (\n            <div className='s-alert-box-inner'>\n              {this.props.message}\n              {/* use this api to customize alert style */}\n              {/* {this.props.condition} */}\n            </div>\n          )\n        }\n        <span className='s-alert-close' onClick={(e) => Alert.close(this.props.id)}>close</span>\n      </div>\n    );\n  }\n}\n","import './dashboard.css';\nimport Sidebar from '../../containers/sidebar/index';\nimport Header from '../../containers/header/index';\nimport React, { Component } from \"react\";\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport { BrowserRouter as Router, Route, Link ,Redirect,Switch} from \"react-router-dom\";\n// for toater message\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Signup from '../../containers/signup/index';\n\nimport routes from \"../../routes.js\";\n\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = ({\n     \n    });\n  }\n\n  componentWillMount(){\n    let masterData = {masterData: 'masterLocation'};\n    // this.props.getMasterData(masterData);\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div className=\"wrapper\">\n       <Header/>\n                         <Sidebar\n                          {...this.props}\n                          routes={routes}\n                          bgColor={'black'}\n                          activeColor={'red'}\n                        />\n\n                        <div className=\"main-panel\">\n                           \n                            <Switch>\n                              {routes.map((prop, key) => {\n                                return (\n                                  <Route\n                                    path={prop.layout + prop.path}\n                                    component={prop.component}\n                                    key={key}\n                                  />\n                                );\n                              })}\n                            </Switch>\n\n                        </div>\n                       \n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport \"./app.css\";\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport { BrowserRouter as Router, Route, Link ,Redirect,Switch} from \"react-router-dom\";\nimport Login from './containers/login/index';\nimport Signup from './containers/signup/index';\nimport 'react-s-alert/dist/s-alert-default.css';\nimport 'react-s-alert/dist/s-alert-css-effects/slide.css';\nimport Alert from 'react-s-alert';\nimport AlertContentTemplate from './utils/alertComponent';\n\n// for toater message\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Header from './containers/header/index';\nimport Sidebar from './containers/sidebar/index';\nimport Dashboard from './containers/dashbaord/index';\n\nimport routes from \"./routes.js\";\nimport history from './utils/history';\n\nconst muiTheme = getMuiTheme({\n  palette: {\n    primary1Color: '#01b9c1',\n    accent1Color: '#01b9c1',\n  },\n  slider: {\n    selectionColor: '#01b9c1',\n    handleFillColor: '#01b9c1',\n  },\n});\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      isloggedIn:false\n    }\n}\n\ncomponentDidMount(){}\n\n  render() {\n    return (\n      <div>\n        <MuiThemeProvider muiTheme={muiTheme}>\n                <ToastContainer autoClose={2600}/>\n            <div className=\"hg100\">\n                    <Router history={history}>\n                      <div>\n                          {\n                            this.state.isloggedIn ?  \n                              <div className=\"wrapper\">\n                               <Sidebar\n                                {...this.props}\n                                routes={routes}\n                                bgColor={'black'}\n                                activeColor={'red'}\n                              />\n                               <div className=\"main-panel\">\n                                  <Header/>\n                               </div>\n                              </div> : null}\n\n\n                            <Route exact path=\"/\" render={() => (\n                                this.state.isloggedIn ? (\n                                  <Redirect to=\"/dashboard\"/>\n                                ) : (\n                                   <Redirect to=\"/login\"/>\n                                )\n                              )}/>\n\n                             <Switch>\n                             <Route path=\"/dashboard\" render={props => <Dashboard {...props} />} />\n                              <Route path=\"/login\" component={Login}/>\n                              <Route path=\"/dashboard/signup\" component={Signup}/>\n                            </Switch>\n                      </div>\n                    </Router>\n\n            </div>\n          </MuiThemeProvider>\n           <Alert contentTemplate={AlertContentTemplate} stack={{ limit: 3 }} />\n           </div>\n    );\n  }\n}\n\nexport default App;\n","export const GET_TABLE_DATA = 'GET_TABLE_DATA';\nexport const GET_TABLE_DATA_SUCCESS = 'GET_TABLE_DATA_SUCCESS';\nexport const GET_TABLE_DATA_ERROR = 'GET_TABLE_DATA_ERROR';\n\nexport const UPDATE_USER_STATUS = 'UPDATE_USER_STATUS';\nexport const UPDATE_USER_STATUS_SUCCESS = 'UPDATE_USER_STATUS_SUCCESS';\nexport const UPDATE_USER_STATUS_ERROR = 'UPDATE_USER_STATUS_ERROR';\n","import {\n    GET_TABLE_DATA,\n    GET_TABLE_DATA_SUCCESS,\n    GET_TABLE_DATA_ERROR,\n    UPDATE_USER_STATUS,\n    UPDATE_USER_STATUS_SUCCESS,\n    UPDATE_USER_STATUS_ERROR\n} from './Constants';\n\nconst initialState = {\n    loading: false,\n    success: false,\n    error: ''\n};\n\nfunction tableReducer(state = initialState, action) {\n    switch (action.type) {\n        case GET_TABLE_DATA:\n            return Object.assign({}, state, {\n                'loading': true,\n                'success': false,\n                'error': ''\n            });\n        case GET_TABLE_DATA_ERROR:\n            return Object.assign({}, state, {\n                'loading': false,\n                'success': false,\n                'error': action\n            });\n        case GET_TABLE_DATA_SUCCESS:\n            return Object.assign({}, state, {\n                'loading': false,\n                'success': true,\n                'error': '',\n                'tableData': action.data\n            });\n        case UPDATE_USER_STATUS:\n            return Object.assign({}, state, {\n                'loading': true,\n                'success': false,\n                'error': ''\n            });\n        case UPDATE_USER_STATUS_ERROR:\n            return Object.assign({}, state, {\n                'loading': false,\n                'success': false,\n                'error': action\n            });\n        case UPDATE_USER_STATUS_SUCCESS:\n            return Object.assign({}, state, {\n                'loading': false,\n                'success': true,\n                'error': '',\n                'updateStatusResponse': action.data\n            });\n        default:\n            return state;\n    }\n}\n\nexport default tableReducer;\n","import {\n    LOGIN,\n    LOGIN_SECCESS,\n    LOGIN_ERROR,\n} from './Constants';\n\nconst initialState = {\n    loading: false,\n    success: false,\n    error: ''\n};\n\nfunction loginReducer(state = initialState, action) {\n    switch (action.type) {\n        case LOGIN:\n            return Object.assign({}, state, {\n                'loading': true,\n                'success': false,\n                'error': ''\n            });\n        case LOGIN_ERROR:\n            return Object.assign({}, state, {\n                'loading': false,\n                'success': false,\n                'error': action\n            });\n        case LOGIN_SECCESS:\n            return Object.assign({}, state, {\n                'loading': false,\n                'success': true,\n                'error': '',\n                'tableData': action.data\n            });\n       \n        default:\n            return state;\n    }\n}\n\nexport default loginReducer;\n","import {\n    ADDAllSERVICE,\n    ADDAllSERVICE_ERROR,\n    ADDAllSERVICE_SECCESS,\n    GETBYIDSERVICE,\n    GETBYIDSERVICE_SECCESS,\n    GETBYIDSERVICE_ERROR\n} from './Constants';\n\nconst initialState = {\n    loading: false,\n    success: false,\n    error: ''\n};\n\nfunction serviceReducer(state = initialState, action) {\n    switch (action.type) {\n        // case LOGIN:\n        //     return Object.assign({}, state, {\n        //         'loading': true,\n        //         'success': false,\n        //         'error': ''\n        //     });\n        // case LOGIN_ERROR:\n        //     return Object.assign({}, state, {\n        //         'loading': false,\n        //         'success': false,\n        //         'error': action\n        //     });\n        // case LOGIN_SECCESS:\n        //     return Object.assign({}, state, {\n        //         'loading': false,\n        //         'success': true,\n        //         'error': '',\n        //         'tableData': action.data\n        //     });\n\n        case ADDAllSERVICE:\n            return Object.assign({}, state, {\n                'loading': true,\n                'success': false,\n                'error': ''\n            });\n        case ADDAllSERVICE_ERROR:\n            return Object.assign({}, state, {\n                'loading': false,\n                'success': false,\n                'error': action\n            });\n        case ADDAllSERVICE_SECCESS:\n            return Object.assign({}, state, {\n                'loading': false,\n                'success': true,\n                'error': '',\n                'serviceData': action.data\n        });\n\n\n\n        case GETBYIDSERVICE:\n        return Object.assign({}, state, {\n            'loading': true,\n            'success': false,\n            'error': '',\n            'serviceDataByID':null\n        });\n        case GETBYIDSERVICE_ERROR:\n            return Object.assign({}, state, {\n                'loading': false,\n                'success': false,\n                'error': action\n            });\n        case GETBYIDSERVICE_SECCESS:\n            return Object.assign({}, state, {\n                'loading': false,\n                'success': true,\n                'error': '',\n                'serviceDataByID': action.data\n        });\n\n       \n        default:\n            return state;\n    }\n}\n\nexport default serviceReducer;\n","import {\n    SHOP,\n    SHOP_ERROR,\n    SHOP_SECCESS,\n} from './Constants';\n\nconst initialState = {\n    loading: false,\n    success: false,\n    error: ''\n};\n\nfunction shopReducer(state = initialState, action) {\n    switch (action.type) {\n            case SHOP:\n            return Object.assign({}, state, {\n                'loading': true,\n                'success': false,\n                'error': ''\n            });\n        case SHOP_ERROR:\n            return Object.assign({}, state, {\n                'loading': false,\n                'success': false,\n                'error': action\n            });\n        case SHOP_SECCESS:\n            return Object.assign({}, state, {\n                'loading': false,\n                'success': true,\n                'error': '',\n                'shopData': action.data\n            });\n\n       \n        default:\n            return state;\n    }\n}\n\nexport default shopReducer;\n","import {\n    ADDAllUSER,\n    ADDAllUSER_ERROR,\n    ADDAllUSER_SECCESS\n} from './Constants';\n\nconst initialState = {\n    loading: false,\n    success: false,\n    error: ''\n};\n\nfunction userReducer(state = initialState, action) {\n    switch (action.type) {\n        case ADDAllUSER:\n            return Object.assign({}, state, {\n                'loading': true,\n                'success': false,\n                'error': ''\n            });\n        case ADDAllUSER_ERROR:\n            return Object.assign({}, state, {\n                'loading': false,\n                'success': false,\n                'error': action\n            });\n        case ADDAllUSER_SECCESS:\n            return Object.assign({}, state, {\n                'loading': false,\n                'success': true,\n                'error': '',\n                'users': action.data\n            });\n\n            \n        default:\n            return state;\n    }\n}\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport { reducer as forms } from 'redux-form';\nimport tableReducer from '../containers/tableContainer/Reducer';\nimport loginReducer from '../containers/login/Reducer';\nimport serviceReducer from '../containers/services/Reducer';\nimport shopReducer from '../containers/shops/Reducer';\nimport userReducer from '../containers/users/Reducer';\n\n\n\nconst rootReducer = combineReducers({\n\tform: forms,\n    tableReducer,\n    loginReducer,\n    serviceReducer,\n    shopReducer,\n    userReducer\n})\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './combineReducer';\nimport thunkMiddleware from 'redux-thunk';\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware\n    )\n);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport { Switch } from 'react-router-dom';\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./assets/demo/demo.css\";\nimport \"./assets/scss/paper-dashboard.scss\";\n// import \"perfect-scrollbar/css/perfect-scrollbar.css\";\nimport App from './app';\n\n\nconst muiTheme = getMuiTheme({\n  palette: {\n    primary1Color: '#01b9c1',\n    accent1Color: '#01b9c1',\n  },\n  slider: {\n    selectionColor: '#01b9c1',\n    handleFillColor: '#01b9c1',\n  },\n});\n\nReactDOM.render(\n\t \n\n    <Provider store={store}>\n     <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\nmodule.hot.accept();\nserviceWorker.unregister();\n","export const ADDSERVICE = 'ADDSERVICE';\nexport const ADDSERVICE_SECCESS = 'GET_ADDSERVICE_SUCCESS';\nexport const ADDSERVICE_ERROR = 'GET_ADDSERVICE_ERROR';\n\nexport const ADDAllSERVICE = 'ADDAllSERVICE';\nexport const ADDAllSERVICE_SECCESS = 'GET_ADDAllSERVICE_SUCCESS';\nexport const ADDAllSERVICE_ERROR = 'GET_ADDAllSERVICE_ERROR';\n\nexport const DELETESERVICE = 'DELETESERVICE';\nexport const DELETESERVICE_SECCESS = 'GET_DELETESERVICE_SUCCESS';\nexport const DELETESERVICE_ERROR = 'GET_DELETESERVICE_ERROR';\n\nexport const GETBYIDSERVICE = 'GETBYIDSERVICE';\nexport const GETBYIDSERVICE_SECCESS = 'GETBYIDSERVICE_SUCCESS';\nexport const GETBYIDSERVICE_ERROR = 'GETBYIDSERVICE_ERROR';","export const UPDATESHOP = 'UPDATESHOP';\nexport const UPDATESHOP_SECCESS = 'GET_UPDATESHOP_SUCCESS';\nexport const UPDATESHOP_ERROR = 'GET_UPDATESHOP_ERROR';\n\nexport const SHOP = 'SHOP';\nexport const SHOP_SECCESS = 'GET_SHOP_SUCCESS';\nexport const SHOP_ERROR = 'GET_SHOP_ERROR';\n\nexport const DELETESHOP = 'DELETESHOP';\nexport const DELETESHOP_SECCESS = 'GET_DELETESHOP_SUCCESS';\nexport const DELETESHOP_ERROR = 'GET_DELETESHOP_ERROR';","\nexport const ADDAllUSER = 'ADDAllUSER';\nexport const ADDAllUSER_SECCESS = 'GET_ADDAllUSER_SUCCESS';\nexport const ADDAllUSER_ERROR = 'GET_ADDAllUSER_ERROR';\n\n\nexport const DELETEUSER = 'DELETEUSER';\nexport const DELETEUSER_SECCESS = 'GET_DELETEUSER_SUCCESS';\nexport const DELETEUSER_ERROR = 'GET_DELETEUSER_ERROR';","export const LOGIN = 'LOGIN';\nexport const LOGIN_SECCESS = 'GET_TABLE_DATA_SUCCESS';\nexport const LOGIN_ERROR = 'GET_TABLE_DATA_ERROR';\n"],"sourceRoot":""}